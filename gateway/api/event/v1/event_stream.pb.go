// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/event/v1/event_stream.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	// 成功
	Code_OK Code = 0
	// 被取消
	Code_CANCELLED Code = 1
	// 未知
	Code_UNKNOWN Code = 2
	// 无效参数
	Code_INVALID_ARGUMENT Code = 3
	// 超过最后期限
	Code_DEADLINE_EXCEEDED Code = 4
	// 无法找到
	Code_NOT_FOUND Code = 5
	// 已经存在
	Code_ALREADY_EXISTS Code = 6
	// 权限不足
	Code_PERMISSION_DENIED Code = 7
	// 资源耗尽
	Code_RESOURCE_EXHAUSTED Code = 8
	// 前置条件失败
	Code_FAILED_PRECONDITION Code = 9
	// 中途失败
	Code_ABORTED Code = 10
	// 超出范围
	Code_OUT_OF_RANGE Code = 11
	// 未实现
	Code_UNIMPLEMENTED Code = 12
	// 内部错误
	Code_INTERNAL Code = 13
	// 不可用 -> 内部错误
	Code_UNAVAILABLE Code = 14
	// 数据丢失
	Code_DATA_LOSS Code = 15
	// 未经认证 -> 登录失效
	Code_UNAUTHENTICATED Code = 16
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:  "OK",
		1:  "CANCELLED",
		2:  "UNKNOWN",
		3:  "INVALID_ARGUMENT",
		4:  "DEADLINE_EXCEEDED",
		5:  "NOT_FOUND",
		6:  "ALREADY_EXISTS",
		7:  "PERMISSION_DENIED",
		8:  "RESOURCE_EXHAUSTED",
		9:  "FAILED_PRECONDITION",
		10: "ABORTED",
		11: "OUT_OF_RANGE",
		12: "UNIMPLEMENTED",
		13: "INTERNAL",
		14: "UNAVAILABLE",
		15: "DATA_LOSS",
		16: "UNAUTHENTICATED",
	}
	Code_value = map[string]int32{
		"OK":                  0,
		"CANCELLED":           1,
		"UNKNOWN":             2,
		"INVALID_ARGUMENT":    3,
		"DEADLINE_EXCEEDED":   4,
		"NOT_FOUND":           5,
		"ALREADY_EXISTS":      6,
		"PERMISSION_DENIED":   7,
		"RESOURCE_EXHAUSTED":  8,
		"FAILED_PRECONDITION": 9,
		"ABORTED":             10,
		"OUT_OF_RANGE":        11,
		"UNIMPLEMENTED":       12,
		"INTERNAL":            13,
		"UNAVAILABLE":         14,
		"DATA_LOSS":           15,
		"UNAUTHENTICATED":     16,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_api_event_v1_event_stream_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_api_event_v1_event_stream_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{0}
}

type AddStatCode int32

const (
	// 等待回复, 回复请求时若为WAITING, 服务端将会忽略
	AddStatCode_WAITING AddStatCode = 0
	// 通过
	AddStatCode_SUCCESS AddStatCode = 1
	// 拒绝
	AddStatCode_DENIED AddStatCode = 2
)

// Enum value maps for AddStatCode.
var (
	AddStatCode_name = map[int32]string{
		0: "WAITING",
		1: "SUCCESS",
		2: "DENIED",
	}
	AddStatCode_value = map[string]int32{
		"WAITING": 0,
		"SUCCESS": 1,
		"DENIED":  2,
	}
)

func (x AddStatCode) Enum() *AddStatCode {
	p := new(AddStatCode)
	*p = x
	return p
}

func (x AddStatCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddStatCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_event_v1_event_stream_proto_enumTypes[1].Descriptor()
}

func (AddStatCode) Type() protoreflect.EnumType {
	return &file_api_event_v1_event_stream_proto_enumTypes[1]
}

func (x AddStatCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddStatCode.Descriptor instead.
func (AddStatCode) EnumDescriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{1}
}

type BeatHeartResponse_Flag int32

const (
	// 送达
	BeatHeartResponse_ACK BeatHeartResponse_Flag = 0
	// sessionId或服务失效, 需要发起online请求
	BeatHeartResponse_FIN BeatHeartResponse_Flag = 1
	// token失效, 需要重新登录
	BeatHeartResponse_RST BeatHeartResponse_Flag = 2
)

// Enum value maps for BeatHeartResponse_Flag.
var (
	BeatHeartResponse_Flag_name = map[int32]string{
		0: "ACK",
		1: "FIN",
		2: "RST",
	}
	BeatHeartResponse_Flag_value = map[string]int32{
		"ACK": 0,
		"FIN": 1,
		"RST": 2,
	}
)

func (x BeatHeartResponse_Flag) Enum() *BeatHeartResponse_Flag {
	p := new(BeatHeartResponse_Flag)
	*p = x
	return p
}

func (x BeatHeartResponse_Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeatHeartResponse_Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_api_event_v1_event_stream_proto_enumTypes[2].Descriptor()
}

func (BeatHeartResponse_Flag) Type() protoreflect.EnumType {
	return &file_api_event_v1_event_stream_proto_enumTypes[2]
}

func (x BeatHeartResponse_Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeatHeartResponse_Flag.Descriptor instead.
func (BeatHeartResponse_Flag) EnumDescriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{12, 0}
}

type EventStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are assignable to Event:
	//	*EventStreamRequest_OnlineRequest
	//	*EventStreamRequest_BeatHeartRequest
	//	*EventStreamRequest_OfflineRequest
	//	*EventStreamRequest_AddFriendRequest
	//	*EventStreamRequest_ConfirmFriendRequest
	//	*EventStreamRequest_NotifyReceiveAddFriendRequest
	//	*EventStreamRequest_ListFriendRequest
	//	*EventStreamRequest_DeleteFriendRequest
	//	*EventStreamRequest_SingleMessageRequest
	Event isEventStreamRequest_Event `protobuf_oneof:"event"`
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{0}
}

func (x *EventStreamRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (m *EventStreamRequest) GetEvent() isEventStreamRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *EventStreamRequest) GetOnlineRequest() *OnlineRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_OnlineRequest); ok {
		return x.OnlineRequest
	}
	return nil
}

func (x *EventStreamRequest) GetBeatHeartRequest() *BeatHeartRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_BeatHeartRequest); ok {
		return x.BeatHeartRequest
	}
	return nil
}

func (x *EventStreamRequest) GetOfflineRequest() *OfflineRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_OfflineRequest); ok {
		return x.OfflineRequest
	}
	return nil
}

func (x *EventStreamRequest) GetAddFriendRequest() *AddFriendRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_AddFriendRequest); ok {
		return x.AddFriendRequest
	}
	return nil
}

func (x *EventStreamRequest) GetConfirmFriendRequest() *ConfirmFriendRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_ConfirmFriendRequest); ok {
		return x.ConfirmFriendRequest
	}
	return nil
}

func (x *EventStreamRequest) GetNotifyReceiveAddFriendRequest() *NotifyReceiveAddFriendRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_NotifyReceiveAddFriendRequest); ok {
		return x.NotifyReceiveAddFriendRequest
	}
	return nil
}

func (x *EventStreamRequest) GetListFriendRequest() *ListFriendRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_ListFriendRequest); ok {
		return x.ListFriendRequest
	}
	return nil
}

func (x *EventStreamRequest) GetDeleteFriendRequest() *DeleteFriendRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_DeleteFriendRequest); ok {
		return x.DeleteFriendRequest
	}
	return nil
}

func (x *EventStreamRequest) GetSingleMessageRequest() *SingleMessageRequest {
	if x, ok := x.GetEvent().(*EventStreamRequest_SingleMessageRequest); ok {
		return x.SingleMessageRequest
	}
	return nil
}

type isEventStreamRequest_Event interface {
	isEventStreamRequest_Event()
}

type EventStreamRequest_OnlineRequest struct {
	OnlineRequest *OnlineRequest `protobuf:"bytes,2,opt,name=onlineRequest,proto3,oneof"`
}

type EventStreamRequest_BeatHeartRequest struct {
	BeatHeartRequest *BeatHeartRequest `protobuf:"bytes,3,opt,name=beatHeartRequest,proto3,oneof"`
}

type EventStreamRequest_OfflineRequest struct {
	OfflineRequest *OfflineRequest `protobuf:"bytes,4,opt,name=offlineRequest,proto3,oneof"`
}

type EventStreamRequest_AddFriendRequest struct {
	AddFriendRequest *AddFriendRequest `protobuf:"bytes,5,opt,name=addFriendRequest,proto3,oneof"`
}

type EventStreamRequest_ConfirmFriendRequest struct {
	ConfirmFriendRequest *ConfirmFriendRequest `protobuf:"bytes,6,opt,name=confirmFriendRequest,proto3,oneof"`
}

type EventStreamRequest_NotifyReceiveAddFriendRequest struct {
	NotifyReceiveAddFriendRequest *NotifyReceiveAddFriendRequest `protobuf:"bytes,7,opt,name=notifyReceiveAddFriendRequest,proto3,oneof"`
}

type EventStreamRequest_ListFriendRequest struct {
	ListFriendRequest *ListFriendRequest `protobuf:"bytes,8,opt,name=listFriendRequest,proto3,oneof"`
}

type EventStreamRequest_DeleteFriendRequest struct {
	DeleteFriendRequest *DeleteFriendRequest `protobuf:"bytes,9,opt,name=deleteFriendRequest,proto3,oneof"`
}

type EventStreamRequest_SingleMessageRequest struct {
	SingleMessageRequest *SingleMessageRequest `protobuf:"bytes,10,opt,name=singleMessageRequest,proto3,oneof"`
}

func (*EventStreamRequest_OnlineRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_BeatHeartRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_OfflineRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_AddFriendRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_ConfirmFriendRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_NotifyReceiveAddFriendRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_ListFriendRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_DeleteFriendRequest) isEventStreamRequest_Event() {}

func (*EventStreamRequest_SingleMessageRequest) isEventStreamRequest_Event() {}

type EventStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Code     Code   `protobuf:"varint,2,opt,name=code,proto3,enum=gateway.api.event.v1.Code" json:"code,omitempty"`
	Messages string `protobuf:"bytes,3,opt,name=messages,proto3" json:"messages,omitempty"`
	// Types that are assignable to Event:
	//	*EventStreamResponse_OnlineResponse
	//	*EventStreamResponse_BeatHeartResponse
	//	*EventStreamResponse_OfflineResponse
	//	*EventStreamResponse_AddFriendResponse
	//	*EventStreamResponse_ConfirmFriendResponse
	//	*EventStreamResponse_NotifyReceiveAddFriendResponse
	//	*EventStreamResponse_ListFriendResponse
	//	*EventStreamResponse_DeleteFriendResponse
	//	*EventStreamResponse_SingleMessageResponse
	Event isEventStreamResponse_Event `protobuf_oneof:"event"`
}

func (x *EventStreamResponse) Reset() {
	*x = EventStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamResponse) ProtoMessage() {}

func (x *EventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamResponse.ProtoReflect.Descriptor instead.
func (*EventStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{1}
}

func (x *EventStreamResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EventStreamResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK
}

func (x *EventStreamResponse) GetMessages() string {
	if x != nil {
		return x.Messages
	}
	return ""
}

func (m *EventStreamResponse) GetEvent() isEventStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *EventStreamResponse) GetOnlineResponse() *OnlineResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_OnlineResponse); ok {
		return x.OnlineResponse
	}
	return nil
}

func (x *EventStreamResponse) GetBeatHeartResponse() *BeatHeartResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_BeatHeartResponse); ok {
		return x.BeatHeartResponse
	}
	return nil
}

func (x *EventStreamResponse) GetOfflineResponse() *OfflineResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_OfflineResponse); ok {
		return x.OfflineResponse
	}
	return nil
}

func (x *EventStreamResponse) GetAddFriendResponse() *AddFriendResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_AddFriendResponse); ok {
		return x.AddFriendResponse
	}
	return nil
}

func (x *EventStreamResponse) GetConfirmFriendResponse() *ConfirmFriendResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_ConfirmFriendResponse); ok {
		return x.ConfirmFriendResponse
	}
	return nil
}

func (x *EventStreamResponse) GetNotifyReceiveAddFriendResponse() *NotifyReceiveAddFriendResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_NotifyReceiveAddFriendResponse); ok {
		return x.NotifyReceiveAddFriendResponse
	}
	return nil
}

func (x *EventStreamResponse) GetListFriendResponse() *ListFriendResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_ListFriendResponse); ok {
		return x.ListFriendResponse
	}
	return nil
}

func (x *EventStreamResponse) GetDeleteFriendResponse() *DeleteFriendResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_DeleteFriendResponse); ok {
		return x.DeleteFriendResponse
	}
	return nil
}

func (x *EventStreamResponse) GetSingleMessageResponse() *SingleMessageResponse {
	if x, ok := x.GetEvent().(*EventStreamResponse_SingleMessageResponse); ok {
		return x.SingleMessageResponse
	}
	return nil
}

type isEventStreamResponse_Event interface {
	isEventStreamResponse_Event()
}

type EventStreamResponse_OnlineResponse struct {
	OnlineResponse *OnlineResponse `protobuf:"bytes,4,opt,name=onlineResponse,proto3,oneof"`
}

type EventStreamResponse_BeatHeartResponse struct {
	BeatHeartResponse *BeatHeartResponse `protobuf:"bytes,5,opt,name=beatHeartResponse,proto3,oneof"`
}

type EventStreamResponse_OfflineResponse struct {
	OfflineResponse *OfflineResponse `protobuf:"bytes,6,opt,name=offlineResponse,proto3,oneof"`
}

type EventStreamResponse_AddFriendResponse struct {
	AddFriendResponse *AddFriendResponse `protobuf:"bytes,7,opt,name=addFriendResponse,proto3,oneof"`
}

type EventStreamResponse_ConfirmFriendResponse struct {
	ConfirmFriendResponse *ConfirmFriendResponse `protobuf:"bytes,8,opt,name=confirmFriendResponse,proto3,oneof"`
}

type EventStreamResponse_NotifyReceiveAddFriendResponse struct {
	NotifyReceiveAddFriendResponse *NotifyReceiveAddFriendResponse `protobuf:"bytes,9,opt,name=notifyReceiveAddFriendResponse,proto3,oneof"`
}

type EventStreamResponse_ListFriendResponse struct {
	ListFriendResponse *ListFriendResponse `protobuf:"bytes,10,opt,name=listFriendResponse,proto3,oneof"`
}

type EventStreamResponse_DeleteFriendResponse struct {
	DeleteFriendResponse *DeleteFriendResponse `protobuf:"bytes,11,opt,name=deleteFriendResponse,proto3,oneof"`
}

type EventStreamResponse_SingleMessageResponse struct {
	SingleMessageResponse *SingleMessageResponse `protobuf:"bytes,12,opt,name=singleMessageResponse,proto3,oneof"`
}

func (*EventStreamResponse_OnlineResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_BeatHeartResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_OfflineResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_AddFriendResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_ConfirmFriendResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_NotifyReceiveAddFriendResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_ListFriendResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_DeleteFriendResponse) isEventStreamResponse_Event() {}

func (*EventStreamResponse_SingleMessageResponse) isEventStreamResponse_Event() {}

// 登录后上线request
type OnlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *OnlineRequest) Reset() {
	*x = OnlineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineRequest) ProtoMessage() {}

func (x *OnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineRequest.ProtoReflect.Descriptor instead.
func (*OnlineRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{2}
}

func (x *OnlineRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 心跳request, 30s发送一次, 61s未收到心跳则截断连接
type BeatHeartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *BeatHeartRequest) Reset() {
	*x = BeatHeartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeatHeartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatHeartRequest) ProtoMessage() {}

func (x *BeatHeartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatHeartRequest.ProtoReflect.Descriptor instead.
func (*BeatHeartRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{3}
}

func (x *BeatHeartRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// 下线request
type OfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *OfflineRequest) Reset() {
	*x = OfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRequest) ProtoMessage() {}

func (x *OfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRequest.ProtoReflect.Descriptor instead.
func (*OfflineRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{4}
}

func (x *OfflineRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OfflineRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// 添加好友请求
type AddFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverUuid string `protobuf:"bytes,1,opt,name=receiverUuid,proto3" json:"receiverUuid,omitempty"`
	// 备注
	Note string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	// 客户端生成, 不作为标识使用, 仅去重
	EventUuid string `protobuf:"bytes,3,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
	// 发送者毫秒时间戳, 如与上一条信息完全相同且时差在50ms内, 抛弃, 送达时间以服务器时间为准
	SendTime int64 `protobuf:"varint,4,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{5}
}

func (x *AddFriendRequest) GetReceiverUuid() string {
	if x != nil {
		return x.ReceiverUuid
	}
	return ""
}

func (x *AddFriendRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AddFriendRequest) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

func (x *AddFriendRequest) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

// 确认好友请求
type ConfirmFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddStatCode AddStatCode `protobuf:"varint,1,opt,name=addStatCode,proto3,enum=gateway.api.event.v1.AddStatCode" json:"addStatCode,omitempty"`
	// 客户端生成, 不作为标识使用, 仅去重
	EventUuid string `protobuf:"bytes,2,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
	// 发送者毫秒时间戳, 如与上一条信息完全相同且时差在50ms内, 抛弃, 送达时间以服务器时间为准
	SendTime int64 `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
}

func (x *ConfirmFriendRequest) Reset() {
	*x = ConfirmFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendRequest) ProtoMessage() {}

func (x *ConfirmFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendRequest.ProtoReflect.Descriptor instead.
func (*ConfirmFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{6}
}

func (x *ConfirmFriendRequest) GetAddStatCode() AddStatCode {
	if x != nil {
		return x.AddStatCode
	}
	return AddStatCode_WAITING
}

func (x *ConfirmFriendRequest) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

func (x *ConfirmFriendRequest) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

// 通知收到添加好友请求, 该条仅ack用
type NotifyReceiveAddFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64 `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *NotifyReceiveAddFriendRequest) Reset() {
	*x = NotifyReceiveAddFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyReceiveAddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReceiveAddFriendRequest) ProtoMessage() {}

func (x *NotifyReceiveAddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReceiveAddFriendRequest.ProtoReflect.Descriptor instead.
func (*NotifyReceiveAddFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyReceiveAddFriendRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

// 好友列表
type ListFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListFriendRequest) Reset() {
	*x = ListFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendRequest) ProtoMessage() {}

func (x *ListFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendRequest.ProtoReflect.Descriptor instead.
func (*ListFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{8}
}

func (x *ListFriendRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 删除好友
type DeleteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventUuid  string `protobuf:"bytes,1,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
	SendTime   int64  `protobuf:"varint,2,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	RemoveUuid string `protobuf:"bytes,3,opt,name=removeUuid,proto3" json:"removeUuid,omitempty"`
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFriendRequest) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

func (x *DeleteFriendRequest) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *DeleteFriendRequest) GetRemoveUuid() string {
	if x != nil {
		return x.RemoveUuid
	}
	return ""
}

// 单聊
type SingleMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageChain []*Message `protobuf:"bytes,1,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	MessageUuid  string     `protobuf:"bytes,2,opt,name=messageUuid,proto3" json:"messageUuid,omitempty"`
	// 接收者uuid
	ReceiverUuid string `protobuf:"bytes,3,opt,name=receiverUuid,proto3" json:"receiverUuid,omitempty"`
	// 发送者毫秒时间戳, 如与上一条信息完全相同且时差在50ms内, 抛弃, 送达时间以服务器时间为准
	SendTime int64 `protobuf:"varint,4,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
}

func (x *SingleMessageRequest) Reset() {
	*x = SingleMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleMessageRequest) ProtoMessage() {}

func (x *SingleMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleMessageRequest.ProtoReflect.Descriptor instead.
func (*SingleMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{10}
}

func (x *SingleMessageRequest) GetMessageChain() []*Message {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *SingleMessageRequest) GetMessageUuid() string {
	if x != nil {
		return x.MessageUuid
	}
	return ""
}

func (x *SingleMessageRequest) GetReceiverUuid() string {
	if x != nil {
		return x.ReceiverUuid
	}
	return ""
}

func (x *SingleMessageRequest) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

// 登录后上线response
type OnlineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *OnlineResponse) Reset() {
	*x = OnlineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineResponse) ProtoMessage() {}

func (x *OnlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineResponse.ProtoReflect.Descriptor instead.
func (*OnlineResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{11}
}

func (x *OnlineResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// 心跳response
type BeatHeartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag BeatHeartResponse_Flag `protobuf:"varint,1,opt,name=flag,proto3,enum=gateway.api.event.v1.BeatHeartResponse_Flag" json:"flag,omitempty"`
}

func (x *BeatHeartResponse) Reset() {
	*x = BeatHeartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeatHeartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatHeartResponse) ProtoMessage() {}

func (x *BeatHeartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatHeartResponse.ProtoReflect.Descriptor instead.
func (*BeatHeartResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{12}
}

func (x *BeatHeartResponse) GetFlag() BeatHeartResponse_Flag {
	if x != nil {
		return x.Flag
	}
	return BeatHeartResponse_ACK
}

// 下线response, 这个response不仅作为request响应, 也作为服务端主动要求下线, 客户端必须处理这个response
type OfflineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *OfflineResponse) Reset() {
	*x = OfflineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineResponse) ProtoMessage() {}

func (x *OfflineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineResponse.ProtoReflect.Descriptor instead.
func (*OfflineResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{13}
}

func (x *OfflineResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SingleMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// snowflakeId
	MessageId   int64  `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	MessageUuid string `protobuf:"bytes,2,opt,name=messageUuid,proto3" json:"messageUuid,omitempty"`
}

func (x *SingleMessageResponse) Reset() {
	*x = SingleMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleMessageResponse) ProtoMessage() {}

func (x *SingleMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleMessageResponse.ProtoReflect.Descriptor instead.
func (*SingleMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{14}
}

func (x *SingleMessageResponse) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SingleMessageResponse) GetMessageUuid() string {
	if x != nil {
		return x.MessageUuid
	}
	return ""
}

type AddFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventUuid string `protobuf:"bytes,1,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
	// 服务端返回
	EventId int64 `protobuf:"varint,2,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *AddFriendResponse) Reset() {
	*x = AddFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponse) ProtoMessage() {}

func (x *AddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponse.ProtoReflect.Descriptor instead.
func (*AddFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{15}
}

func (x *AddFriendResponse) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

func (x *AddFriendResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type ConfirmFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64 `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	// 客户端生成, 不作为标识使用, 仅去重
	EventUuid string `protobuf:"bytes,3,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
}

func (x *ConfirmFriendResponse) Reset() {
	*x = ConfirmFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendResponse) ProtoMessage() {}

func (x *ConfirmFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendResponse.ProtoReflect.Descriptor instead.
func (*ConfirmFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{16}
}

func (x *ConfirmFriendResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *ConfirmFriendResponse) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

// 通知收到添加好友请求, 服务端先发
type NotifyReceiveAddFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId     int64  `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	RequestUuid string `protobuf:"bytes,2,opt,name=requestUuid,proto3" json:"requestUuid,omitempty"`
	Note        string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *NotifyReceiveAddFriendResponse) Reset() {
	*x = NotifyReceiveAddFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyReceiveAddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReceiveAddFriendResponse) ProtoMessage() {}

func (x *NotifyReceiveAddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReceiveAddFriendResponse.ProtoReflect.Descriptor instead.
func (*NotifyReceiveAddFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{17}
}

func (x *NotifyReceiveAddFriendResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *NotifyReceiveAddFriendResponse) GetRequestUuid() string {
	if x != nil {
		return x.RequestUuid
	}
	return ""
}

func (x *NotifyReceiveAddFriendResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type ListFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUuid []string `protobuf:"bytes,1,rep,name=friendUuid,proto3" json:"friendUuid,omitempty"`
}

func (x *ListFriendResponse) Reset() {
	*x = ListFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendResponse) ProtoMessage() {}

func (x *ListFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendResponse.ProtoReflect.Descriptor instead.
func (*ListFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{18}
}

func (x *ListFriendResponse) GetFriendUuid() []string {
	if x != nil {
		return x.FriendUuid
	}
	return nil
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventUuid string `protobuf:"bytes,1,opt,name=eventUuid,proto3" json:"eventUuid,omitempty"`
	EventId   int64  `protobuf:"varint,2,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteFriendResponse) GetEventUuid() string {
	if x != nil {
		return x.EventUuid
	}
	return ""
}

func (x *DeleteFriendResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Detail:
	//	*Message_Plain_
	//	*Message_Image_
	//	*Message_Emoji_
	Detail isMessage_Detail `protobuf_oneof:"detail"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{20}
}

func (m *Message) GetDetail() isMessage_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *Message) GetPlain() *Message_Plain {
	if x, ok := x.GetDetail().(*Message_Plain_); ok {
		return x.Plain
	}
	return nil
}

func (x *Message) GetImage() *Message_Image {
	if x, ok := x.GetDetail().(*Message_Image_); ok {
		return x.Image
	}
	return nil
}

func (x *Message) GetEmoji() *Message_Emoji {
	if x, ok := x.GetDetail().(*Message_Emoji_); ok {
		return x.Emoji
	}
	return nil
}

type isMessage_Detail interface {
	isMessage_Detail()
}

type Message_Plain_ struct {
	Plain *Message_Plain `protobuf:"bytes,1,opt,name=plain,proto3,oneof"`
}

type Message_Image_ struct {
	Image *Message_Image `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

type Message_Emoji_ struct {
	Emoji *Message_Emoji `protobuf:"bytes,3,opt,name=emoji,proto3,oneof"`
}

func (*Message_Plain_) isMessage_Detail() {}

func (*Message_Image_) isMessage_Detail() {}

func (*Message_Emoji_) isMessage_Detail() {}

type Message_Plain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Message_Plain) Reset() {
	*x = Message_Plain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Plain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Plain) ProtoMessage() {}

func (x *Message_Plain) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Plain.ProtoReflect.Descriptor instead.
func (*Message_Plain) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{20, 0}
}

func (x *Message_Plain) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Message_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Message_Image) Reset() {
	*x = Message_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Image) ProtoMessage() {}

func (x *Message_Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Image.ProtoReflect.Descriptor instead.
func (*Message_Image) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{20, 1}
}

func (x *Message_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Message_Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Message_Emoji) Reset() {
	*x = Message_Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_v1_event_stream_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Emoji) ProtoMessage() {}

func (x *Message_Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_v1_event_stream_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Emoji.ProtoReflect.Descriptor instead.
func (*Message_Emoji) Descriptor() ([]byte, []int) {
	return file_api_event_v1_event_stream_proto_rawDescGZIP(), []int{20, 2}
}

func (x *Message_Emoji) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_event_v1_event_stream_proto protoreflect.FileDescriptor

var file_api_event_v1_event_stream_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x22, 0xf5, 0x06, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x54, 0x0a, 0x10, 0x62, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x62, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a,
	0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x7b, 0x0a, 0x1d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x11,
	0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x14, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0xdd, 0x07, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x62, 0x65, 0x61,
	0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x74,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x62, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x61, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x69, 0x73,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x15, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x25, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x30, 0x0a, 0x10, 0x42, 0x65, 0x61, 0x74, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x84,
	0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x0b, 0x61, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a,
	0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x6f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x78, 0x0a, 0x11, 0x42, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61,
	0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x21, 0x0a, 0x04, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x49,
	0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x54, 0x10, 0x02, 0x22, 0x27, 0x0a, 0x0f,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x15, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x4b,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x1e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x34,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3b, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x1a, 0x1b, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x1a, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x1b, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2a, 0xb7, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41,
	0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x41,
	0x44, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x55, 0x54, 0x5f,
	0x4f, 0x46, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x10,
	0x2a, 0x33, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4e,
	0x49, 0x45, 0x44, 0x10, 0x02, 0x32, 0x77, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x68, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x29,
	0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x50, 0x01,
	0x5a, 0x17, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_event_v1_event_stream_proto_rawDescOnce sync.Once
	file_api_event_v1_event_stream_proto_rawDescData = file_api_event_v1_event_stream_proto_rawDesc
)

func file_api_event_v1_event_stream_proto_rawDescGZIP() []byte {
	file_api_event_v1_event_stream_proto_rawDescOnce.Do(func() {
		file_api_event_v1_event_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_event_v1_event_stream_proto_rawDescData)
	})
	return file_api_event_v1_event_stream_proto_rawDescData
}

var file_api_event_v1_event_stream_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_event_v1_event_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_event_v1_event_stream_proto_goTypes = []interface{}{
	(Code)(0),                              // 0: gateway.api.event.v1.Code
	(AddStatCode)(0),                       // 1: gateway.api.event.v1.AddStatCode
	(BeatHeartResponse_Flag)(0),            // 2: gateway.api.event.v1.BeatHeartResponse.Flag
	(*EventStreamRequest)(nil),             // 3: gateway.api.event.v1.EventStreamRequest
	(*EventStreamResponse)(nil),            // 4: gateway.api.event.v1.EventStreamResponse
	(*OnlineRequest)(nil),                  // 5: gateway.api.event.v1.OnlineRequest
	(*BeatHeartRequest)(nil),               // 6: gateway.api.event.v1.BeatHeartRequest
	(*OfflineRequest)(nil),                 // 7: gateway.api.event.v1.OfflineRequest
	(*AddFriendRequest)(nil),               // 8: gateway.api.event.v1.AddFriendRequest
	(*ConfirmFriendRequest)(nil),           // 9: gateway.api.event.v1.ConfirmFriendRequest
	(*NotifyReceiveAddFriendRequest)(nil),  // 10: gateway.api.event.v1.NotifyReceiveAddFriendRequest
	(*ListFriendRequest)(nil),              // 11: gateway.api.event.v1.ListFriendRequest
	(*DeleteFriendRequest)(nil),            // 12: gateway.api.event.v1.DeleteFriendRequest
	(*SingleMessageRequest)(nil),           // 13: gateway.api.event.v1.SingleMessageRequest
	(*OnlineResponse)(nil),                 // 14: gateway.api.event.v1.OnlineResponse
	(*BeatHeartResponse)(nil),              // 15: gateway.api.event.v1.BeatHeartResponse
	(*OfflineResponse)(nil),                // 16: gateway.api.event.v1.OfflineResponse
	(*SingleMessageResponse)(nil),          // 17: gateway.api.event.v1.SingleMessageResponse
	(*AddFriendResponse)(nil),              // 18: gateway.api.event.v1.AddFriendResponse
	(*ConfirmFriendResponse)(nil),          // 19: gateway.api.event.v1.ConfirmFriendResponse
	(*NotifyReceiveAddFriendResponse)(nil), // 20: gateway.api.event.v1.NotifyReceiveAddFriendResponse
	(*ListFriendResponse)(nil),             // 21: gateway.api.event.v1.ListFriendResponse
	(*DeleteFriendResponse)(nil),           // 22: gateway.api.event.v1.DeleteFriendResponse
	(*Message)(nil),                        // 23: gateway.api.event.v1.Message
	(*Message_Plain)(nil),                  // 24: gateway.api.event.v1.Message.Plain
	(*Message_Image)(nil),                  // 25: gateway.api.event.v1.Message.Image
	(*Message_Emoji)(nil),                  // 26: gateway.api.event.v1.Message.Emoji
}
var file_api_event_v1_event_stream_proto_depIdxs = []int32{
	5,  // 0: gateway.api.event.v1.EventStreamRequest.onlineRequest:type_name -> gateway.api.event.v1.OnlineRequest
	6,  // 1: gateway.api.event.v1.EventStreamRequest.beatHeartRequest:type_name -> gateway.api.event.v1.BeatHeartRequest
	7,  // 2: gateway.api.event.v1.EventStreamRequest.offlineRequest:type_name -> gateway.api.event.v1.OfflineRequest
	8,  // 3: gateway.api.event.v1.EventStreamRequest.addFriendRequest:type_name -> gateway.api.event.v1.AddFriendRequest
	9,  // 4: gateway.api.event.v1.EventStreamRequest.confirmFriendRequest:type_name -> gateway.api.event.v1.ConfirmFriendRequest
	10, // 5: gateway.api.event.v1.EventStreamRequest.notifyReceiveAddFriendRequest:type_name -> gateway.api.event.v1.NotifyReceiveAddFriendRequest
	11, // 6: gateway.api.event.v1.EventStreamRequest.listFriendRequest:type_name -> gateway.api.event.v1.ListFriendRequest
	12, // 7: gateway.api.event.v1.EventStreamRequest.deleteFriendRequest:type_name -> gateway.api.event.v1.DeleteFriendRequest
	13, // 8: gateway.api.event.v1.EventStreamRequest.singleMessageRequest:type_name -> gateway.api.event.v1.SingleMessageRequest
	0,  // 9: gateway.api.event.v1.EventStreamResponse.code:type_name -> gateway.api.event.v1.Code
	14, // 10: gateway.api.event.v1.EventStreamResponse.onlineResponse:type_name -> gateway.api.event.v1.OnlineResponse
	15, // 11: gateway.api.event.v1.EventStreamResponse.beatHeartResponse:type_name -> gateway.api.event.v1.BeatHeartResponse
	16, // 12: gateway.api.event.v1.EventStreamResponse.offlineResponse:type_name -> gateway.api.event.v1.OfflineResponse
	18, // 13: gateway.api.event.v1.EventStreamResponse.addFriendResponse:type_name -> gateway.api.event.v1.AddFriendResponse
	19, // 14: gateway.api.event.v1.EventStreamResponse.confirmFriendResponse:type_name -> gateway.api.event.v1.ConfirmFriendResponse
	20, // 15: gateway.api.event.v1.EventStreamResponse.notifyReceiveAddFriendResponse:type_name -> gateway.api.event.v1.NotifyReceiveAddFriendResponse
	21, // 16: gateway.api.event.v1.EventStreamResponse.listFriendResponse:type_name -> gateway.api.event.v1.ListFriendResponse
	22, // 17: gateway.api.event.v1.EventStreamResponse.deleteFriendResponse:type_name -> gateway.api.event.v1.DeleteFriendResponse
	17, // 18: gateway.api.event.v1.EventStreamResponse.singleMessageResponse:type_name -> gateway.api.event.v1.SingleMessageResponse
	1,  // 19: gateway.api.event.v1.ConfirmFriendRequest.addStatCode:type_name -> gateway.api.event.v1.AddStatCode
	23, // 20: gateway.api.event.v1.SingleMessageRequest.messageChain:type_name -> gateway.api.event.v1.Message
	2,  // 21: gateway.api.event.v1.BeatHeartResponse.flag:type_name -> gateway.api.event.v1.BeatHeartResponse.Flag
	24, // 22: gateway.api.event.v1.Message.plain:type_name -> gateway.api.event.v1.Message.Plain
	25, // 23: gateway.api.event.v1.Message.image:type_name -> gateway.api.event.v1.Message.Image
	26, // 24: gateway.api.event.v1.Message.emoji:type_name -> gateway.api.event.v1.Message.Emoji
	3,  // 25: gateway.api.event.v1.EventStream.EventStream:input_type -> gateway.api.event.v1.EventStreamRequest
	4,  // 26: gateway.api.event.v1.EventStream.EventStream:output_type -> gateway.api.event.v1.EventStreamResponse
	26, // [26:27] is the sub-list for method output_type
	25, // [25:26] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_api_event_v1_event_stream_proto_init() }
func file_api_event_v1_event_stream_proto_init() {
	if File_api_event_v1_event_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_event_v1_event_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeatHeartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyReceiveAddFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeatHeartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyReceiveAddFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Plain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_v1_event_stream_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_event_v1_event_stream_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EventStreamRequest_OnlineRequest)(nil),
		(*EventStreamRequest_BeatHeartRequest)(nil),
		(*EventStreamRequest_OfflineRequest)(nil),
		(*EventStreamRequest_AddFriendRequest)(nil),
		(*EventStreamRequest_ConfirmFriendRequest)(nil),
		(*EventStreamRequest_NotifyReceiveAddFriendRequest)(nil),
		(*EventStreamRequest_ListFriendRequest)(nil),
		(*EventStreamRequest_DeleteFriendRequest)(nil),
		(*EventStreamRequest_SingleMessageRequest)(nil),
	}
	file_api_event_v1_event_stream_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EventStreamResponse_OnlineResponse)(nil),
		(*EventStreamResponse_BeatHeartResponse)(nil),
		(*EventStreamResponse_OfflineResponse)(nil),
		(*EventStreamResponse_AddFriendResponse)(nil),
		(*EventStreamResponse_ConfirmFriendResponse)(nil),
		(*EventStreamResponse_NotifyReceiveAddFriendResponse)(nil),
		(*EventStreamResponse_ListFriendResponse)(nil),
		(*EventStreamResponse_DeleteFriendResponse)(nil),
		(*EventStreamResponse_SingleMessageResponse)(nil),
	}
	file_api_event_v1_event_stream_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Message_Plain_)(nil),
		(*Message_Image_)(nil),
		(*Message_Emoji_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_event_v1_event_stream_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_event_v1_event_stream_proto_goTypes,
		DependencyIndexes: file_api_event_v1_event_stream_proto_depIdxs,
		EnumInfos:         file_api_event_v1_event_stream_proto_enumTypes,
		MessageInfos:      file_api_event_v1_event_stream_proto_msgTypes,
	}.Build()
	File_api_event_v1_event_stream_proto = out.File
	file_api_event_v1_event_stream_proto_rawDesc = nil
	file_api_event_v1_event_stream_proto_goTypes = nil
	file_api_event_v1_event_stream_proto_depIdxs = nil
}
